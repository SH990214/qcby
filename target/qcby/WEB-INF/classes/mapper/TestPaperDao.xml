<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qcby.dao.TestPaperDao">
  <resultMap id="BaseResultMap" type="com.qcby.entity.TestPaper">
    <id column="test_id" jdbcType="VARCHAR" property="testId" />
    <result column="test_title" jdbcType="VARCHAR" property="testTitle" />
    <result column="test_project" jdbcType="VARCHAR" property="testProject" />
    <result column="date" jdbcType="VARCHAR" property="date" />
    <result column="teacher_id" jdbcType="VARCHAR" property="teacherId" />
    <result column="cla_name" jdbcType="VARCHAR" property="claName" />
    <result column="isRelease" jdbcType="INTEGER" property="isrelease" />
    <result column="difficult" jdbcType="VARCHAR" property="difficult" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    test_id, test_title, test_project, date, teacher_id, cla_name, isRelease, difficult
  </sql>
  <select id="selectByExample" parameterType="com.qcby.entity.TestPaperExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from test_paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from test_paper
    where test_id = #{testId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from test_paper
    where test_id = #{testId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qcby.entity.TestPaperExample">
    delete from test_paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qcby.entity.TestPaper">
    insert into test_paper (test_id, test_title, test_project, 
      date, teacher_id, cla_name, 
      isRelease, difficult)
    values (#{testId,jdbcType=VARCHAR}, #{testTitle,jdbcType=VARCHAR}, #{testProject,jdbcType=VARCHAR}, 
      #{date,jdbcType=VARCHAR}, #{teacherId,jdbcType=VARCHAR}, #{claName,jdbcType=VARCHAR}, 
      #{isrelease,jdbcType=INTEGER}, #{difficult,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qcby.entity.TestPaper">
    insert into test_paper
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="testId != null">
        test_id,
      </if>
      <if test="testTitle != null">
        test_title,
      </if>
      <if test="testProject != null">
        test_project,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="claName != null">
        cla_name,
      </if>
      <if test="isrelease != null">
        isRelease,
      </if>
      <if test="difficult != null">
        difficult,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="testId != null">
        #{testId,jdbcType=VARCHAR},
      </if>
      <if test="testTitle != null">
        #{testTitle,jdbcType=VARCHAR},
      </if>
      <if test="testProject != null">
        #{testProject,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="claName != null">
        #{claName,jdbcType=VARCHAR},
      </if>
      <if test="isrelease != null">
        #{isrelease,jdbcType=INTEGER},
      </if>
      <if test="difficult != null">
        #{difficult,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qcby.entity.TestPaperExample" resultType="java.lang.Long">
    select count(*) from test_paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update test_paper
    <set>
      <if test="record.testId != null">
        test_id = #{record.testId,jdbcType=VARCHAR},
      </if>
      <if test="record.testTitle != null">
        test_title = #{record.testTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.testProject != null">
        test_project = #{record.testProject,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      </if>
      <if test="record.claName != null">
        cla_name = #{record.claName,jdbcType=VARCHAR},
      </if>
      <if test="record.isrelease != null">
        isRelease = #{record.isrelease,jdbcType=INTEGER},
      </if>
      <if test="record.difficult != null">
        difficult = #{record.difficult,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update test_paper
    set test_id = #{record.testId,jdbcType=VARCHAR},
      test_title = #{record.testTitle,jdbcType=VARCHAR},
      test_project = #{record.testProject,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=VARCHAR},
      teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      cla_name = #{record.claName,jdbcType=VARCHAR},
      isRelease = #{record.isrelease,jdbcType=INTEGER},
      difficult = #{record.difficult,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qcby.entity.TestPaper">
    update test_paper
    <set>
      <if test="testTitle != null">
        test_title = #{testTitle,jdbcType=VARCHAR},
      </if>
      <if test="testProject != null">
        test_project = #{testProject,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="claName != null">
        cla_name = #{claName,jdbcType=VARCHAR},
      </if>
      <if test="isrelease != null">
        isRelease = #{isrelease,jdbcType=INTEGER},
      </if>
      <if test="difficult != null">
        difficult = #{difficult,jdbcType=VARCHAR},
      </if>
    </set>
    where test_id = #{testId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qcby.entity.TestPaper">
    update test_paper
    set test_title = #{testTitle,jdbcType=VARCHAR},
      test_project = #{testProject,jdbcType=VARCHAR},
      date = #{date,jdbcType=VARCHAR},
      teacher_id = #{teacherId,jdbcType=VARCHAR},
      cla_name = #{claName,jdbcType=VARCHAR},
      isRelease = #{isrelease,jdbcType=INTEGER},
      difficult = #{difficult,jdbcType=VARCHAR}
    where test_id = #{testId,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.qcby.entity.TestPaperExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from test_paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>