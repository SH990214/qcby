<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qcby.dao.TestStudentDao">
  <resultMap id="BaseResultMap" type="com.qcby.entity.TestStudent">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="stu_id" jdbcType="VARCHAR" property="stuId" />
    <result column="test_id" jdbcType="VARCHAR" property="testId" />
    <result column="project" jdbcType="VARCHAR" property="project" />
    <result column="fraction" jdbcType="DOUBLE" property="fraction" />
    <result column="rank" jdbcType="INTEGER" property="rank" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, stu_id, test_id, project, fraction, rank
  </sql>
  <select id="selectByExample" parameterType="com.qcby.entity.TestStudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from test_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from test_student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from test_student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qcby.entity.TestStudentExample">
    delete from test_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qcby.entity.TestStudent">
    insert into test_student (id, stu_id, test_id, 
      project, fraction, rank
      )
    values (#{id,jdbcType=INTEGER}, #{stuId,jdbcType=VARCHAR}, #{testId,jdbcType=VARCHAR}, 
      #{project,jdbcType=VARCHAR}, #{fraction,jdbcType=DOUBLE}, #{rank,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qcby.entity.TestStudent">
    insert into test_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="testId != null">
        test_id,
      </if>
      <if test="project != null">
        project,
      </if>
      <if test="fraction != null">
        fraction,
      </if>
      <if test="rank != null">
        rank,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stuId != null">
        #{stuId,jdbcType=VARCHAR},
      </if>
      <if test="testId != null">
        #{testId,jdbcType=VARCHAR},
      </if>
      <if test="project != null">
        #{project,jdbcType=VARCHAR},
      </if>
      <if test="fraction != null">
        #{fraction,jdbcType=DOUBLE},
      </if>
      <if test="rank != null">
        #{rank,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qcby.entity.TestStudentExample" resultType="java.lang.Long">
    select count(*) from test_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update test_student
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.stuId != null">
        stu_id = #{record.stuId,jdbcType=VARCHAR},
      </if>
      <if test="record.testId != null">
        test_id = #{record.testId,jdbcType=VARCHAR},
      </if>
      <if test="record.project != null">
        project = #{record.project,jdbcType=VARCHAR},
      </if>
      <if test="record.fraction != null">
        fraction = #{record.fraction,jdbcType=DOUBLE},
      </if>
      <if test="record.rank != null">
        rank = #{record.rank,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update test_student
    set id = #{record.id,jdbcType=INTEGER},
      stu_id = #{record.stuId,jdbcType=VARCHAR},
      test_id = #{record.testId,jdbcType=VARCHAR},
      project = #{record.project,jdbcType=VARCHAR},
      fraction = #{record.fraction,jdbcType=DOUBLE},
      rank = #{record.rank,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qcby.entity.TestStudent">
    update test_student
    <set>
      <if test="stuId != null">
        stu_id = #{stuId,jdbcType=VARCHAR},
      </if>
      <if test="testId != null">
        test_id = #{testId,jdbcType=VARCHAR},
      </if>
      <if test="project != null">
        project = #{project,jdbcType=VARCHAR},
      </if>
      <if test="fraction != null">
        fraction = #{fraction,jdbcType=DOUBLE},
      </if>
      <if test="rank != null">
        rank = #{rank,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qcby.entity.TestStudent">
    update test_student
    set stu_id = #{stuId,jdbcType=VARCHAR},
      test_id = #{testId,jdbcType=VARCHAR},
      project = #{project,jdbcType=VARCHAR},
      fraction = #{fraction,jdbcType=DOUBLE},
      rank = #{rank,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.qcby.entity.TestStudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from test_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>