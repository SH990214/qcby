<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"

	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
	<!-- 配置SpringMVC -->
	<!-- 1.开启SpringMVC注解模式 -->
	<!-- 简化配置： 
		(1)自动注册DefaultAnootationHandlerMapping,AnotationMethodHandlerAdapter 
		(2)提供一些列：数据绑定，数字和日期的format @NumberFormat, @DateTimeFormat, xml,json默认读写支持 
	-->
	<mvc:annotation-driven />
	
	<!-- 2.静态资源默认servlet配置
		(1)加入对静态资源的处理：js,gif,png
		(2)允许使用"/"做整体映射
	 -->
	 <mvc:default-servlet-handler/>


	 <!-- 3.配置jsp 显示ViewResolver -->
<!--	 <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
<!--	 	<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />-->
<!--	 	<property name="prefix" value="/views/user/" />-->
<!--	 	<property name="suffix" value=".html" />-->
<!--	 </bean>-->
	<!-- thymeleaf的视图解析器 会与冲突ContentNegotiatingViewResolver-->
	<bean id="viewResolver" class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
		<property name="characterEncoding" value="UTF-8"/>
		<property name="templateEngine" ref="templateEngine"/>
	</bean>
	<!-- 模板引擎 -->
	<bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
		<property name="templateResolver" ref="templateResolver"/>
	</bean>
	<!-- 模板解析器 -->
	<bean id="templateResolver" class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
		<constructor-arg ref="servletContext"/>
		<property name="prefix" value="/views/"/>
		<property name="suffix" value=".html"/>
		<property name="templateMode" value="HTML5"/>
		<property name="cacheable" value="false"/>
		<property name="characterEncoding" value="UTF-8"/>
	</bean>

<!--	文件上传下载相关配置-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8"/>
		<property name="maxUploadSize" value="5242440"/>    <!--设置最大支持的上传文件大小 B-->
	</bean>
	 
	 <!-- 4.扫描web相关的bean   注意这里，意思是启动的时候java程序扫描这个目录下的java文件，识别带有注解的java-->
	 <context:component-scan base-package="com.qcby.controller" />
</beans>